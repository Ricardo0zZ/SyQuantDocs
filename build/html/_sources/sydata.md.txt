# SyData 数据API接口

## 市场概览

### 获取交易日历
接口：

`get_trade_days(start=None, end=None, is_open=True, engine=engine1)`

输入参数:
    
    start 开始时间，可缺省
        格式: str
        说明：形如'2020-01-01'格式，数据包括开始时间。默认为可取到的最早日期
    end 结束时间，可缺省
        格式: str
        说明：形如'2020-01-01'格式，数据包括结束时间。默认为最新日期
    is_open 是否为交易日
        格式: Bool
        说明：True为交易日，False为全部日历。默认为True

示例：
```python
from syquant.sydata.data_msql import *
get_trade_days('2021-01-08', '2021-01-12')
```

输出：

```
['2021-01-08', '2021-01-11', '2021-01-12']
```

### 获取全部股票或指数
`get_all_securities(types="stock", date=None, info=False, engine=engine1)`
输入参数:
    
    types 标的类型
        格式：str
        说明：支持股票'stock'，指数'index'
    date 日期
        格式: str
        说明：形如'2020-01-01'格式，仅能获取该日期的上市股票。默认为获取全部股票
    info 详细信息
        格式：Bool
        说明：True为展示详细信息，False为仅展示标的代码，默认为False

示例：
```python
from syquant.sydata.data_msql import *
get_all_securities('stock',date='2021-12-01',info=True)
```

输出：

```
             code display_name  name  start_date    end_date   type
0     000001.XSHE         平安银行  PAYH  1991-04-03  2200-01-01  stock
1     000002.XSHE          万科A   WKA  1991-01-29  2200-01-01  stock
2     000004.XSHE         国华网安  GHWA  1990-12-01  2200-01-01  stock
3     000005.XSHE         ST星源  STXY  1990-12-10  2200-01-01  stock
4     000006.XSHE         深振业A  SZYA  1992-04-27  2200-01-01  stock
...           ...          ...   ...         ...         ...    ...
4555  688799.XSHG         华纳药厂  HNYC  2021-07-13  2200-01-01  stock
4556  688800.XSHG          瑞可达   RKD  2021-07-22  2200-01-01  stock
4557  688819.XSHG         天能股份  TNGF  2021-01-18  2200-01-01  stock
4558  688981.XSHG         中芯国际  ZXGJ  2020-07-16  2200-01-01  stock
4559  689009.XSHG         九号公司  JHGS  2020-10-29  2200-01-01  stock
```

## 股票相关数据

### 获取股票量价数据
接口：

`get_price(instrument, start, end, frequency='1d', fq=None, fields=None, engine=engine1)`

输入参数:

    instrument 标的代码
        格式：str, list
        说明：支持单个标的或多个标的
    start 开始时间
        格式: str
        说明：形如'2020-01-01'格式，数据包括开始时间
    end 结束时间
        格式: str
        说明：形如'2020-01-01'格式，数据包括结束时间
    frequency 周期
        格式：str
        说明：目前仅支持'1d'，即以1天为周期
    fq 复权
        格式：str
        说明：价格复权情况，'bfq'不复权，'hqf'后复权，'qfq'前复权，默认为不复权
    fileds 数据字段
        格式：list
        说明：形如['open','close','high','low','volume']，支持如下字段：
              open        开盘价
              close       收盘价
              low         最低价
              high        最高价
              volume      成交量
              money       成交额
              factor      复权因子
              high_limit  涨停价
              low_limit   跌停价
              vwa         成交量加权均价
              pre_close   昨日收盘价
              paused      是否停牌
              is_st       是否st,*st和退市整理期标的

示例：
```python
from syquant.sydata.data_msql import *
get_price('000001.XSHE', '2021-11-02', '2021-11-05', fq='hfq', fields=['open','close','high','low','volume','factor'])
```
输出：
```
          code        date     open    close     volume   factor
0  000001.XSHE  2021-11-02  2357.70  2212.85  1641230.0  121.719
1  000001.XSHE  2021-11-03  2203.12  2194.60   916020.0  121.719
2  000001.XSHE  2021-11-04  2200.68  2175.12   807935.0  121.719
3  000001.XSHE  2021-11-05  2172.69  2147.13   900466.0  121.719
```

关于股票数据复权

由于股票存在配股、分拆、合并和发放股息等事件，会导致股价出现较大的缺口。 若使用不复权的价格处理数据、计算各种指标，将会导致它们失去连续性，且使用不复权价格计算收益也会出现错误。 为了保证数据连贯性，常通过前复权和后复权对价格序列进行调整。

- 前复权：保持当前价格不变，将历史价格进行增减，从而使股价连续。 前复权用来看盘非常方便，能一眼看出股价的历史走势，叠加各种技术指标也比较顺畅，是各种行情软件默认的复权方式。 这种方法虽然很常见，但也有两个缺陷需要注意。

    - 为了保证当前价格不变，每次股票除权除息，均需要重新调整历史价格，因此其历史价格是时变的。 这会导致在不同时点看到的历史前复权价可能出现差异。

    - 对于有持续分红的公司来说，前复权价可能出现负值。

- 后复权：保证历史价格不变，在每次股票权益事件发生后，调整当前的股票价格。 后复权价格和真实股票价格可能差别较大，不适合用来看盘。 其优点在于，可以被看作投资者的长期财富增长曲线，反映投资者的真实收益率情况。
   
在量化投资研究中普遍采用后复权数据。

### 获取股票分钟级数据
接口：

`get_minute_price(stock, start_date=None, end_date=None, fq='bfq', engine=engine1)`

输入参数:

    stock 股票名
        格式：str。例如：'000001.XSHE'
        说明：仅支持单个标
    start_date 开始时间
        格式：str。例如：'2021-01-04', '2021-01-04 23:59:59'
        说明：开始时间，若仅有日期则表示当天0点。如'2021-01-04' = '2021-01-04 00:00:00'
    end_date 结束时间
        格式：str。例如：'2021-01-04', '2021-01-04 23:59:59'
        说明：结束时间，若仅有日期则表示当天0点。如'2021-01-04' = '2021-01-04 00:00:00'
    fq 复权
        格式：str
        说明：价格复权情况，'bfq'不复权，'hqf'后复权，'qfq'前复权，默认为不复权

示例：
```python
from syquant.sydata.data_msql import *
get_minute_data('000001.XSHE', '2021-11-01 10:00:00', '2021-11-01 14:50:00', fq='bfq')
```
输出：
```
                   time   open  close   high    low    volume       money
0   2021-11-01 10:00:00  19.25  19.28  19.28  19.24  137500.0   2649540.0
1   2021-11-01 10:01:00  19.28  19.28  19.30  19.26  378800.0   7306270.0
2   2021-11-01 10:02:00  19.31  19.32  19.36  19.30  738900.0  14283400.0
3   2021-11-01 10:03:00  19.31  19.27  19.34  19.27  712500.0  13757100.0
4   2021-11-01 10:04:00  19.30  19.31  19.34  19.26  452400.0   8732030.0
..                  ...    ...    ...    ...    ...       ...         ...
196 2021-11-01 14:46:00  19.41  19.41  19.43  19.40  299200.0   5809260.0
197 2021-11-01 14:47:00  19.41  19.40  19.42  19.40  282400.0   5483530.0
198 2021-11-01 14:48:00  19.41  19.41  19.42  19.40  243800.0   4735110.0
199 2021-11-01 14:49:00  19.42  19.42  19.44  19.41  193900.0   3766810.0
200 2021-11-01 14:50:00  19.43  19.42  19.43  19.42  203200.0   3947730.0
```

## 指数相关数据

### 获取指数量价数据
接口：

`get_index_price(instrument, start, end, frequency='1d', fields=None, engine=engine1)`

输入参数:
    
    instrument 标的代码
        格式：str, list
        说明：支持单个标的或多个标的
    start 开始时间
        格式: str
        说明：形如'2020-01-01'格式，数据包括开始时间
    end 结束时间
        格式: str
        说明：形如'2020-01-01'格式，数据包括结束时间
    frequency 周期
        格式：str
        说明：目前仅支持'1d'，即以1天为周期
    fileds 数据字段
        格式：list
        说明：形如['open','close','high','low','volume']，支持如下字段：
              open        开盘价
              close       收盘价
              low         最低价
              high        最高价
              volume      成交量
              money       成交额
              vwap        成交量加权均价
              pre_close   昨日收盘价

示例：
```python
from syquant.sydata.data_msql import *
get_index_price('000300.XSHG', '2021-01-01', '2021-11-01')
```

输出：

```
            code        date     open    close     high      low        volume
0    000300.XSHG  2021-01-04  5212.93  5267.72  5284.43  5190.94  2.117110e+10
1    000300.XSHG  2021-01-05  5245.84  5368.50  5368.50  5234.38  2.249310e+10
2    000300.XSHG  2021-01-06  5386.51  5417.67  5433.47  5341.43  1.937730e+10
3    000300.XSHG  2021-01-07  5428.39  5513.66  5513.66  5413.35  2.198720e+10
4    000300.XSHG  2021-01-08  5526.29  5495.43  5547.47  5442.69  2.043250e+10
..           ...         ...      ...      ...      ...      ...           ...
194  000300.XSHG  2021-10-26  4983.24  4963.10  5002.57  4953.48  1.408890e+10
195  000300.XSHG  2021-10-27  4949.23  4898.16  4949.23  4884.94  1.471120e+10
196  000300.XSHG  2021-10-28  4882.59  4864.14  4898.66  4846.28  1.566490e+10
197  000300.XSHG  2021-10-29  4861.27  4908.77  4908.77  4855.76  1.598870e+10
198  000300.XSHG  2021-11-01  4878.13  4890.69  4908.21  4858.25  1.715840e+10
```

### 获取指数成分股及其权重
接口：

`get_index_stocks(code, date=None, engine=engine1)`

输入参数:
    
    code 指数代码（目前仅支持聚宽指数格式）
        格式: str
        说明：形如'000906.XSHG'格式
    date 日期
        格式: str
        说明：形如'2020-01-01'格式，得到该日期之前可得到的成分股数据，不会有未来函数，默认为最新日期

示例：
```python
from syquant.sydata.data_msql import *
get_index_stocks('000300.XSHG', date='2021-01-01')
```

输出：

```
      index_code        date   stock_code  weight
0    000300.XSHG  2020-12-31  000001.XSHE   0.957
1    000300.XSHG  2020-12-31  000002.XSHE   0.996
2    000300.XSHG  2020-12-31  000063.XSHE   0.463
3    000300.XSHG  2020-12-31  000066.XSHE   0.170
4    000300.XSHG  2020-12-31  000069.XSHE   0.148
..           ...         ...          ...     ...
295  000300.XSHG  2020-12-31  603993.XSHG   0.225
296  000300.XSHG  2020-12-31  688008.XSHG   0.191
297  000300.XSHG  2020-12-31  688009.XSHG   0.077
298  000300.XSHG  2020-12-31  688012.XSHG   0.172
299  000300.XSHG  2020-12-31  688036.XSHG   0.124
```
